{"ast":null,"code":"import { AnswerApi, Answer } from \"../../../sdk\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../sdk\";\nexport let AnswersService = /*#__PURE__*/(() => {\n  class AnswersService {\n    answerApi;\n    constructor(answerApi) {\n      this.answerApi = answerApi;\n    }\n    getAnswers(questionId) {\n      let query = {\n        questionId: questionId\n      };\n      return this.answerApi.find({\n        where: query\n      });\n    }\n    getAnswer(anserId) {\n      let query = {\n        id: anserId\n      };\n      return this.answerApi.find({\n        where: query\n      });\n    }\n    deleteAnswer(answerId) {\n      return this.answerApi.deleteById(answerId);\n    }\n    updateAnswer(values) {\n      let data = new Answer();\n      data.answer = values.answer;\n      data.positiveVotes = values.positiveVotes;\n      data.negativeVotes = values.negativeVotes;\n      data.questionId = values.questionId;\n      return this.answerApi.updateAttributes(values.id, data);\n    }\n    createAnswer(values) {\n      let data = new Answer();\n      data.answer = values.answer;\n      data.questionId = values.questionId;\n      return this.answerApi.create(data);\n    }\n    countAnswers(questionId) {\n      let query = {\n        questionId: questionId\n      };\n      return this.answerApi.count({\n        where: query\n      });\n    }\n    static ɵfac = function AnswersService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AnswersService)(i0.ɵɵinject(i1.AnswerApi));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AnswersService,\n      factory: AnswersService.ɵfac\n    });\n  }\n  return AnswersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}