{"ast":null,"code":"import { ActivatedRoute } from \"@angular/router\";\nimport { AnswersService } from \"../services/answers.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DeleteAnswerModalComponent } from \"./delete-answer/delete-answer-modal.component\";\nimport { NewAnswerModalComponent } from \"./new-answer/new-answer-modal.component\";\nimport { UpdateAnswerModalComponent } from \"./update-answer/update-answer-modal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/answers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nfunction QuestionAnswersComponent_mat_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 6)(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 8)(4, \"i\", 9);\n    i0.ɵɵlistener(\"click\", function QuestionAnswersComponent_mat_list_item_7_Template_i_click_4_listener() {\n      const answer_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addPositiveVote(answer_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"i\", 11);\n    i0.ɵɵlistener(\"click\", function QuestionAnswersComponent_mat_list_item_7_Template_i_click_7_listener() {\n      const answer_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addNegativeVote(answer_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 10);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"i\", 12);\n    i0.ɵɵlistener(\"click\", function QuestionAnswersComponent_mat_list_item_7_Template_i_click_10_listener() {\n      const answer_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(answer_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"span\", 10);\n    i0.ɵɵelementStart(12, \"i\", 13);\n    i0.ɵɵlistener(\"click\", function QuestionAnswersComponent_mat_list_item_7_Template_i_click_12_listener() {\n      const answer_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openUpdateAnswerModal(answer_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"span\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", answer_r2.answer, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(answer_r2.positiveVotes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(answer_r2.negativeVotes);\n  }\n}\nexport let QuestionAnswersComponent = /*#__PURE__*/(() => {\n  class QuestionAnswersComponent {\n    answersService;\n    route;\n    dialog;\n    question;\n    constructor(answersService, route, dialog) {\n      this.answersService = answersService;\n      this.route = route;\n      this.dialog = dialog;\n    }\n    ngOnInit() {\n      this.route.data.subscribe(routeData => {\n        let data = routeData[\"data\"];\n        if (data) {\n          this.question = data.question;\n        }\n      });\n    }\n    openNewAnswerModal(questionId) {\n      let dialogRef = this.dialog.open(NewAnswerModalComponent, {\n        data: {\n          questionId: questionId\n        }\n      });\n      dialogRef.afterClosed().subscribe(answer => {\n        if (answer) {\n          this.addAnswerToList(answer);\n        }\n      });\n    }\n    openUpdateAnswerModal(answer) {\n      let dialogRef = this.dialog.open(UpdateAnswerModalComponent, {\n        data: {\n          answer: answer\n        }\n      });\n    }\n    delete(answerId) {\n      let dialogRef = this.dialog.open(DeleteAnswerModalComponent, {\n        data: {\n          answerId: answerId\n        }\n      });\n      dialogRef.afterClosed().subscribe(confirm => {\n        if (confirm) {\n          var index = this.question.answers.findIndex(answer => answer.id === answerId);\n          this.question.answers.splice(index, 1);\n        }\n      });\n    }\n    addPositiveVote(answer) {\n      answer.positiveVotes += 1;\n      this.answersService.updateAnswer(answer);\n    }\n    addNegativeVote(answer) {\n      answer.negativeVotes += 1;\n      this.answersService.updateAnswer(answer);\n    }\n    addAnswerToList(answer) {\n      this.question.answers.push(answer);\n    }\n    static ɵfac = function QuestionAnswersComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || QuestionAnswersComponent)(i0.ɵɵdirectiveInject(i1.AnswersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatDialog));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QuestionAnswersComponent,\n      selectors: [[\"answer\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"col-lg-12\", \"question-answers\"], [1, \"card\", \"col-md-offset-2\", \"col-md-8\"], [1, \"list-title\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"list\"], [\"class\", \"list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-item\"], [\"matLine\", \"\", 1, \"answer\"], [\"matLine\", \"\", 1, \"icons-line\"], [\"aria-hidden\", \"true\", 1, \"list-single-icon\", \"fa\", \"fa-thumbs-o-up\", 3, \"click\"], [1, \"list-single-icon-number\"], [1, \"list-single-icon\", \"fa\", \"fa-thumbs-o-down\", 3, \"click\"], [1, \"list-single-icon\", \"fa\", \"fa\", \"fa-trash-o\", 3, \"click\"], [1, \"list-single-icon\", \"fa\", \"fa-pencil\", 3, \"click\"]],\n      template: function QuestionAnswersComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function QuestionAnswersComponent_Template_button_click_4_listener() {\n            return ctx.openNewAnswerModal(ctx.question.id);\n          });\n          i0.ɵɵtext(5, \"New Answer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"mat-list\", 4);\n          i0.ɵɵtemplate(7, QuestionAnswersComponent_mat_list_item_7_Template, 14, 3, \"mat-list-item\", 5);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.question.question);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.question.answers);\n        }\n      },\n      styles: [\".question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]{margin:20px 0}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]:not(:first-child){border-top:1px solid #e1e1e1}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .answer[_ngcontent-%COMP%]{white-space:normal}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]{margin-top:10px}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon[_ngcontent-%COMP%]{color:#555;font-size:20px}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon-number[_ngcontent-%COMP%]{color:#555;vertical-align:top}.question-answers[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon-number[_ngcontent-%COMP%]:not(:last-child){margin-right:15px}\"]\n    });\n  }\n  return QuestionAnswersComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}