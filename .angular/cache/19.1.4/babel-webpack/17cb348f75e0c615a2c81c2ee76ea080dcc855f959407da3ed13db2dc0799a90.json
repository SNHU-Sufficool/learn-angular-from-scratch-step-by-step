{"ast":null,"code":"import { QuestionsService } from \"../services/questions.service\";\nimport { AnswersService } from \"../services/answers.service\";\nimport { DeleteQuestionModalComponent } from \"./delete-question/delete-question-modal.component\";\nimport { NewQuestionModalComponent } from \"./new-question/new-question-modal.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/questions.service\";\nimport * as i3 from \"../services/answers.service\";\nimport * as i4 from \"@angular/material/dialog\";\nconst _c0 = a0 => [\"/question/\", a0];\nfunction CategoryQuestionsComponent_mat_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 6)(1, \"h3\", 7)(2, \"a\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\", 9)(5, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function CategoryQuestionsComponent_mat_list_item_7_Template_i_click_5_listener() {\n      const question_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addPositiveVote(question_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 11);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"i\", 12);\n    i0.ɵɵlistener(\"click\", function CategoryQuestionsComponent_mat_list_item_7_Template_i_click_8_listener() {\n      const question_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addNegativeVote(question_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 11);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"i\", 13);\n    i0.ɵɵlistener(\"click\", function CategoryQuestionsComponent_mat_list_item_7_Template_i_click_11_listener() {\n      const question_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(question_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"span\", 11);\n    i0.ɵɵelementStart(13, \"span\", 11);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, question_r2.questionSlug));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(question_r2.question);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(question_r2.positiveVotes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r2.negativeVotes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", question_r2.answers ? question_r2.answers.length : 0, \" Answers\");\n  }\n}\nexport let CategoryQuestionsComponent = /*#__PURE__*/(() => {\n  class CategoryQuestionsComponent {\n    route;\n    questionsService;\n    answersService;\n    dialog;\n    questions;\n    categoryTitle;\n    categorySlug;\n    constructor(route, questionsService, answersService, dialog) {\n      this.route = route;\n      this.questionsService = questionsService;\n      this.answersService = answersService;\n      this.dialog = dialog;\n    }\n    ngOnInit() {\n      this.route.data.subscribe(routeData => {\n        let data = routeData[\"data\"];\n        if (data) {\n          this.questions = data.questions;\n          this.categoryTitle = data.category_title;\n          this.categorySlug = data.category_slug;\n        }\n      });\n    }\n    getQuestions() {\n      this.questionsService.getQuestionsByCategory(this.categorySlug).then(questions => this.questions = questions);\n    }\n    openNewQuestionModal(categorySlug) {\n      let dialogRef = this.dialog.open(NewQuestionModalComponent, {\n        data: {\n          categorySlug: categorySlug\n        }\n      });\n      dialogRef.afterClosed().subscribe(question => {\n        if (question) {\n          this.addQuestionToList(question);\n        }\n      });\n    }\n    delete(questionId) {\n      let dialogRef = this.dialog.open(DeleteQuestionModalComponent, {\n        data: {\n          questionId: questionId\n        }\n      });\n      dialogRef.afterClosed().subscribe(confirm => {\n        if (confirm) {\n          // refresh the questions list\n          var index = this.questions.findIndex(question => question.id === questionId);\n          this.questions.splice(index, 1);\n          // TODO: evaluar cambiar esto por un operation method en loopback.\n          this.answersService.getAnswers(questionId).then(answers => {\n            for (let answer of answers) {\n              this.answersService.deleteAnswer(answer.id);\n            }\n          });\n        }\n      });\n    }\n    addQuestionToList(question) {\n      this.questions.push(question);\n    }\n    addPositiveVote(question) {\n      question.positiveVotes += 1;\n      this.questionsService.updateQuestion(question);\n    }\n    addNegativeVote(question) {\n      question.negativeVotes += 1;\n      this.questionsService.updateQuestion(question);\n    }\n    static ɵfac = function CategoryQuestionsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CategoryQuestionsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.QuestionsService), i0.ɵɵdirectiveInject(i3.AnswersService), i0.ɵɵdirectiveInject(i4.MatDialog));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryQuestionsComponent,\n      selectors: [[\"category-questions\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"col-lg-12\", \"category-questions\"], [1, \"card\", \"col-md-offset-2\", \"col-md-8\"], [1, \"list-title\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"list\"], [\"class\", \"list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-item\"], [\"matLine\", \"\"], [3, \"routerLink\"], [\"matLine\", \"\", 1, \"icons-line\"], [\"aria-hidden\", \"true\", 1, \"list-single-icon\", \"fa\", \"fa-thumbs-o-up\", 3, \"click\"], [1, \"list-single-icon-number\"], [1, \"list-single-icon\", \"fa\", \"fa-thumbs-o-down\", 3, \"click\"], [1, \"list-single-icon\", \"fa\", \"fa\", \"fa-trash-o\", 3, \"click\"]],\n      template: function CategoryQuestionsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function CategoryQuestionsComponent_Template_button_click_4_listener() {\n            return ctx.openNewQuestionModal(ctx.categorySlug);\n          });\n          i0.ɵɵtext(5, \"New Question\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"mat-list\", 4);\n          i0.ɵɵtemplate(7, CategoryQuestionsComponent_mat_list_item_7_Template, 15, 7, \"mat-list-item\", 5);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Learn about: \", ctx.categoryTitle, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n        }\n      },\n      styles: [\".category-questions[_ngcontent-%COMP%]   .list[_ngcontent-%COMP%]{margin-top:30px}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]{margin-bottom:10px}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]:not(:first-child){border-top:1px solid #e1e1e1}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]{margin-top:10px}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon[_ngcontent-%COMP%]{color:#555;font-size:20px}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon-number[_ngcontent-%COMP%]{color:#555;vertical-align:top}.category-questions[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   .icons-line[_ngcontent-%COMP%]   .list-single-icon-number[_ngcontent-%COMP%]:not(:last-child){margin-right:15px}\"]\n    });\n  }\n  return CategoryQuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}