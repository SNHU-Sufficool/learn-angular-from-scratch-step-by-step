{"ast":null,"code":"export class Question {\n  \"categorySlug\";\n  \"questionSlug\";\n  \"question\";\n  \"negativeVotes\";\n  \"positiveVotes\";\n  \"id\";\n  answers;\n  constructor(data) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Question`.\n   */\n  static getModelName() {\n    return \"Question\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Question for dynamic purposes.\n  **/\n  static factory(data) {\n    return new Question(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  static getModelDefinition() {\n    return {\n      name: 'Question',\n      plural: 'Questions',\n      path: 'Questions',\n      idName: 'id',\n      properties: {\n        \"categorySlug\": {\n          name: 'categorySlug',\n          type: 'string'\n        },\n        \"questionSlug\": {\n          name: 'questionSlug',\n          type: 'string'\n        },\n        \"question\": {\n          name: 'question',\n          type: 'string'\n        },\n        \"negativeVotes\": {\n          name: 'negativeVotes',\n          type: 'number',\n          default: 0\n        },\n        \"positiveVotes\": {\n          name: 'positiveVotes',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        }\n      },\n      relations: {\n        answers: {\n          name: 'answers',\n          type: 'Answer[]',\n          model: 'Answer',\n          relationType: 'hasMany',\n          keyFrom: 'id',\n          keyTo: 'questionId'\n        }\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}