{"ast":null,"code":"import { ActivatedRouteSnapshot } from \"@angular/router\";\nimport { QuestionsService } from \"../services/questions.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/questions.service\";\nexport let QuestionAnswersResolver = /*#__PURE__*/(() => {\n  class QuestionAnswersResolver {\n    questionsService;\n    constructor(questionsService) {\n      this.questionsService = questionsService;\n    }\n    resolve(route) {\n      let questionSlug = route.paramMap.get(\"questionSlug\");\n      return new Promise((resolve, reject) => {\n        this.questionsService.getQuestionBySlug(questionSlug).subscribe({\n          next: question => {\n            let breadcrumbs = [{\n              url: \"/\",\n              label: \"Categories\"\n            }, {\n              url: \"questions/about/\" + question.categorySlug,\n              label: question.categorySlug\n            }, {\n              url: \"question/\" + questionSlug,\n              label: question.question\n            }];\n            return resolve({\n              question: question,\n              breadcrumbs: breadcrumbs\n            });\n          },\n          error: err => {\n            console.log(err);\n            return resolve(null);\n          }\n        });\n      });\n    }\n    static ɵfac = function QuestionAnswersResolver_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || QuestionAnswersResolver)(i0.ɵɵinject(i1.QuestionsService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: QuestionAnswersResolver,\n      factory: QuestionAnswersResolver.ɵfac\n    });\n  }\n  return QuestionAnswersResolver;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}