{"ast":null,"code":"import { LoopBackConfig } from \"../../lb.config\";\nimport * as i0 from \"@angular/core\";\n/**\n * @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n * @module LoggerService\n * @license MIT\n * @description\n * Console Log wrapper that can be disabled in production mode\n **/\nexport let LoggerService = /*#__PURE__*/(() => {\n  class LoggerService {\n    log(...args) {\n      if (LoopBackConfig.debuggable()) console.log.apply(console, args);\n    }\n    info(...args) {\n      if (LoopBackConfig.debuggable()) console.info.apply(console, args);\n    }\n    error(...args) {\n      if (LoopBackConfig.debuggable()) console.error.apply(console, args);\n    }\n    count(arg) {\n      if (LoopBackConfig.debuggable()) console.count(arg);\n    }\n    group(arg) {\n      if (LoopBackConfig.debuggable()) console.count(arg);\n    }\n    groupEnd() {\n      if (LoopBackConfig.debuggable()) console.groupEnd();\n    }\n    profile(arg) {\n      if (LoopBackConfig.debuggable()) console.count(arg);\n    }\n    profileEnd() {\n      if (LoopBackConfig.debuggable()) console.profileEnd();\n    }\n    time(arg) {\n      if (LoopBackConfig.debuggable()) console.time(arg);\n    }\n    timeEnd(arg) {\n      if (LoopBackConfig.debuggable()) console.timeEnd(arg);\n    }\n    static ɵfac = function LoggerService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoggerService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoggerService,\n      factory: LoggerService.ɵfac\n    });\n  }\n  return LoggerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}